package app.sensors;

import java.util.Objects;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;

/**
 * A JPA entity that represents a generic sensor. This class describes the persistent structure
 * of the sensor, as stored in database. It can be seen as a concrete configuration of the sensor.
 * 
 * @author Michal Knapik
 * 
 * Based on https://spring.io/guides/tutorials/rest
 */
@Entity
class Sensor {

	// the primary key, auto-generated by JPA
	private @Id @GeneratedValue Long id;
	
	// the name of the sensor
	private String name;
	
	// the unit of the measured quantity
	private String unit;

	// the string description of the location of the sensor
	private String location;
	
	// -- constructors --
	Sensor() {}

	Sensor(String name, String unit, String location) {
		this.name = name;
		this.unit = unit;
		this.location = location;
	}

	// -- getters and setters --
	public Long getId() {
		return this.id;
	}

	public String getName() {
		return this.name;
	}

	public String getUnit() {
		return this.unit;
	}

	public String getLocation() { 
		return this.location;
	}
	
	public void setId(Long id) {
		this.id = id;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setUnit(String unit) {
		this.unit = unit;
	}
	
	public void setLocation(String location) {
		this.location = location;
	}

	// overridden Object method need to insert Sensors into Collections, etc.
	@Override
	public boolean equals(Object o) {

		if (this == o)
			return true;
		if (!(o instanceof Sensor))
			return false;
    
		Sensor sensor = (Sensor) o;
		return Objects.equals(this.id, sensor.id) && Objects.equals(this.name, sensor.name) && Objects.equals(this.unit, sensor.unit)
				&& Objects.equals(this.location, sensor.location);
	}

	// overridden Object method need to insert Sensors into Collections, etc.
	@Override
	public int hashCode() {
		return Objects.hash(this.id, this.name, this.unit, this.location);
	}

	// overridden Object method helpful in debugging, prints Sensor description to string
	@Override
	public String toString() {
		return "Sensor " + "id: " + this.id + ", name: " + this.name + ", unit: [" + this.unit + "], location: " + this.location;
	}
	
}
